name: deployment

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.15'
        
    - name: Install dependencies
      run: npm ci

    - name: Create environment.ts
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        mkdir -p src/environments
        echo "export const environment = {" > src/environments/environment.ts
        echo "  production: false," >> src/environments/environment.ts
        echo "  supabaseUrl: '${SUPABASE_URL}'," >> src/environments/environment.ts
        echo "  supabaseKey: '${SUPABASE_KEY}'" >> src/environments/environment.ts
        echo "};" >> src/environments/environment.ts

    - name: Build Angular project
      run: npm run build

  test:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install dependencies
      run: npm ci

    - name: Create environment.ts
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |
        mkdir -p src/environments
        echo "export const environment = {" > src/environments/environment.ts
        echo "  production: false," >> src/environments/environment.ts
        echo "  supabaseUrl: '${SUPABASE_URL}'," >> src/environments/environment.ts
        echo "  supabaseKey: '${SUPABASE_KEY}'" >> src/environments/environment.ts
        echo "};" >> src/environments/environment.ts

    - name: Install Chrome dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y libnss3 libxss1 libappindicator1 libindicator7
        sudo apt-get install -y fonts-liberation libappindicator3-1 libasound2 libatk-bridge2.0-0 libatk1.0-0 libcups2 libdbus-1-3 libexpat1 libgbm-dev libgtk-3-0 libnspr4 libxkbcommon-x11-0 lsb-release xdg-utils

    - name: Run tests
      run: npm test

  deploy:
    needs: test

    permissions:
      contents: write
      pages: write     
      id-token: write  

    environment:
      name: production
      url: ${{ steps.deployment.outputs.page_url }}

    runs-on: ubuntu-latest

    steps:
      - name: checkout repo
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: use node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'
      
      - name: configure github pages
        uses: actions/configure-pages@v3
        with:
          static_site_generator: next

      - run: npm install
      - run: npm run build

      - name: upload artifacts
        uses: actions/upload-pages-artifact@v1
        with: 
          path: "./out"

      - name: deploy
        id: deployment
        uses: actions/deploy-pages@v1
